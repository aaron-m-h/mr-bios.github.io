{"version":3,"sources":["webpack:///./src/components/layout/index.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/constants/locales.js","webpack:///./src/components/LocalizedLink/index.js","webpack:///./src/components/Header/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["messages","en","pt","addLocaleData","concat","enData","ptData","Layout","_ref","locale","children","react_default","a","createElement","index_es","react","Header","className","styles","content","propTypes","PropTypes","string","isRequired","oneOfType","node","arrayOf","SEO","description","lang","meta","keywords","title","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","property","author","length","join","defaultProps","object","NotFoundPage","layout","seo","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","func","m","module","exports","require","default","path","LocalizedLink","to","intl","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","locales","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Object","assign","intlShape","injectIntl","react__WEBPACK_IMPORTED_MODULE_4___default","header","inner","style","margin","_LocalizedLink__WEBPACK_IMPORTED_MODULE_7__","react_intl__WEBPACK_IMPORTED_MODULE_6__","id","language","keys","map","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","active","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-404-js-3ad1be154ea7cae1ffb3.js","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { IntlProvider, addLocaleData } from 'react-intl'\n\n// Locale data\nimport enData from 'react-intl/locale-data/en'\nimport ptData from 'react-intl/locale-data/pt'\n\n// Messages\nimport en from '../../i18n/en.json'\nimport pt from '../../i18n/pt.json'\n\n// Style\nimport './reset.css'\nimport styles from './style.module.css'\n\n// Components\nimport Header from '../Header'\n\nconst messages = { en, pt }\n\naddLocaleData([...enData, ...ptData])\n\nconst Layout = ({ locale, children }) => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <Fragment>\n      <Header />\n      <div className={styles.content}>{children}</div>\n    </Fragment>\n  </IntlProvider>\n)\n\nLayout.propTypes = {\n  locale: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n}\n\nexport default Layout","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n    en: {\n      path: 'en',\n      locale: 'English',\n      default: true\n    },\n    pt: {\n      path: 'pt',\n      locale: 'Português'\n    }\n  }","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { injectIntl, intlShape } from 'react-intl'\n\nimport locales from '../../constants/locales'\n\nconst LocalizedLink = ({ to, intl: { locale }, ...props }) => {\n  const path = locales[locale].default ? to : `/${locale}${to}`\n\n  return <Link {...props} to={path} />\n}\n\nLocalizedLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  intl: intlShape.isRequired\n}\n\nexport default injectIntl(LocalizedLink)","import React from 'react'\nimport { Link } from 'gatsby'\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl'\n\nimport LocalizedLink from '../LocalizedLink'\n\nimport locales from '../../constants/locales'\n\nimport styles from './style.module.css'\n\nconst Header = ({ intl: { locale } }) => (\n  <div className={styles.header}>\n    <div className={styles.inner}>\n      <h1 style={{ margin: 0 }}>\n        <LocalizedLink to=\"/\">\n          <FormattedMessage id=\"siteTitle\" />\n        </LocalizedLink>\n      </h1>\n      <nav className={styles.language}>\n        {Object.keys(locales).map(key => (\n          <Link\n            className={key === locale ? styles.active : ''}\n            key={locales[key].locale}\n            to={locales[key].default ? '/' : `/${locales[key].path}`}\n          >\n            {locales[key].locale}\n          </Link>\n        ))}\n      </nav>\n    </div>\n  </div>\n)\n\nHeader.propTypes = { intl: intlShape.isRequired }\n\nexport default injectIntl(Header)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}