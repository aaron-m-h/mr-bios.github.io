{"version":3,"sources":["webpack:///./src/components/Layout/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/constants/locales.js","webpack:///./src/components/LocalizedLink/index.js","webpack:///./src/components/Header/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["messages","en","pt","addLocaleData","concat","enData","ptData","Layout","_ref","locale","children","react_default","a","createElement","index_es","react","Header","className","styles","content","propTypes","PropTypes","string","isRequired","oneOfType","node","arrayOf","IndexPage","pageContext","components_Layout","id","LocalizedLink","to","shape","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","object","func","m","module","exports","require","default","path","intl","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","locales","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Object","assign","intlShape","injectIntl","react__WEBPACK_IMPORTED_MODULE_4___default","header","inner","style","margin","_LocalizedLink__WEBPACK_IMPORTED_MODULE_7__","react_intl__WEBPACK_IMPORTED_MODULE_6__","language","keys","map","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","active","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json"],"mappings":"wOAmBMA,EAAW,CAAEC,KAAIC,MAEvBC,YAAa,GAAAC,OAAKC,IAAWC,MAE7B,IAAMC,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,SAAX,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcL,OAAQA,EAAQT,SAAUA,EAASS,IAC/CE,EAAAC,EAAAC,cAACE,EAAA,SAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,IAAOC,SAAUT,MAKvCH,EAAOa,UAAY,CACjBX,OAAQY,IAAUC,OAAOC,WACzBb,SAAUW,IAAUG,UAAU,CAC5BH,IAAUI,KACVJ,IAAUK,QAAQL,IAAUI,QAC3BF,YAGUhB,iBCjCToB,EAAY,SAAAnB,GAAA,IAAkBC,EAAlBD,EAAGoB,YAAenB,OAAlB,OAChBE,EAAAC,EAAAC,cAACgB,EAAD,CAAQpB,OAAQA,GACdE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBgB,GAAG,QAEvBnB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBgB,GAAG,aAEvBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAeC,GAAG,WAChBrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBgB,GAAG,aAK3BH,EAAUP,UAAY,CACpBQ,YAAaP,IAAUY,MAAM,CAC3BxB,OAAQY,IAAUC,OAAOC,aACxBA,YAGUI,8CC3Bf,IAAAO,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAC,EAAA,sBAAAF,EAAA7B,IAAAuB,EAAA,KAa2BS,IAAMC,cAAc,IA0CvCxB,IAAUyB,OACTzB,IAAUC,OAAOC,WAChBF,IAAU0B,KACR1B,IAAU0B,0BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qBCA/CC,EAAOC,QAAU,CACbjD,GAAI,CACFoD,KAAM,KACN5C,OAAQ,UACR2C,SAAS,GAEXlD,GAAI,CACFmD,KAAM,KACN5C,OAAQ,+ICDRsB,EAAgB,SAAAvB,GAAwC,IAArCwB,EAAqCxB,EAArCwB,GAAYvB,EAAyBD,EAAjC8C,KAAQ7C,OAAa8C,EAAYC,IAAAhD,EAAA,eACtD6C,EAAOI,IAAQhD,GAAQ2C,QAAUpB,EAA1B,IAAmCvB,EAASuB,EAEzD,OAAO0B,EAAA9C,EAAAC,cAAC8C,EAAA,EAADC,OAAAC,OAAA,GAAUN,EAAV,CAAiBvB,GAAIqB,MAG9BtB,EAAcX,UAAY,CACxBY,GAAIX,IAAUC,OAAOC,WACrB+B,KAAMQ,IAAUvC,YAGHwC,gBAAWhC,mhBCRpBf,EAAS,SAAAR,GAAA,IAAWC,EAAXD,EAAG8C,KAAQ7C,OAAX,OACbuD,EAAApD,EAAAC,cAAA,OAAKI,UAAWC,IAAO+C,QACrBD,EAAApD,EAAAC,cAAA,OAAKI,UAAWC,IAAOgD,OACrBF,EAAApD,EAAAC,cAAA,MAAIsD,MAAO,CAAEC,OAAQ,IACnBJ,EAAApD,EAAAC,cAACwD,EAAA,EAAD,CAAerC,GAAG,KAChBgC,EAAApD,EAAAC,cAACyD,EAAA,EAAD,CAAkBxC,GAAG,gBAGzBkC,EAAApD,EAAAC,cAAA,OAAKI,UAAWC,IAAOqD,UACpBX,OAAOY,KAAKf,KAASgB,IAAI,SAAAC,GAAG,OAC3BV,EAAApD,EAAAC,cAAC8D,EAAA,EAAD,CACE1D,UAAWyD,IAAQjE,EAASS,IAAO0D,OAAS,GAC5CF,IAAKjB,IAAQiB,GAAKjE,OAClBuB,GAAIyB,IAAQiB,GAAKtB,QAAU,IAAvB,IAAiCK,IAAQiB,GAAKrB,MAEjDI,IAAQiB,GAAKjE,cAQ1BO,EAAOI,UAAY,CAAEkC,KAAMQ,IAAUvC,YAEtBwC,gBAAW/C,qGC7BpB6D,EAAmB,SAAArE,GAAkB,IAAfsE,EAAetE,EAAfsE,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEnC,IAAM/B,cAAcsE,IAApBvB,OAAAC,OAAA,CACLiB,WACAC,iBACGA,EAAcK,OANV,MAUXP,EAAiBzD,UAAY,CAC3B0D,SAAUzD,IAAUY,MAAM,CACxBiD,SAAU7D,IAAUC,OAAOC,aAC1BA,YAGUsD","file":"component---src-pages-index-js-2b36b26fceb76c9c935b.js","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { IntlProvider, addLocaleData } from 'react-intl'\n\n// Locale data\nimport enData from 'react-intl/locale-data/en'\nimport ptData from 'react-intl/locale-data/pt'\n\n// Messages\nimport en from '../../i18n/en.json'\nimport pt from '../../i18n/pt.json'\n\n// Style\nimport './reset.css'\nimport styles from './style.module.css'\n\n// Components\nimport Header from '../Header'\n\nconst messages = { en, pt }\n\naddLocaleData([...enData, ...ptData])\n\nconst Layout = ({ locale, children }) => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <Fragment>\n      <Header />\n      <div className={styles.content}>{children}</div>\n    </Fragment>\n  </IntlProvider>\n)\n\nLayout.propTypes = {\n  locale: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n}\n\nexport default Layout","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormattedMessage } from 'react-intl'\n\nimport Layout from '../components/Layout'\nimport LocalizedLink from '../components/LocalizedLink'\n\nconst IndexPage = ({ pageContext: { locale } }) => (\n  <Layout locale={locale}>\n    <h1>\n      <FormattedMessage id=\"hi\" />\n    </h1>\n    <p>\n      <FormattedMessage id=\"welcome\" />\n    </p>\n    <LocalizedLink to=\"/about/\">\n      <FormattedMessage id=\"about\" />\n    </LocalizedLink>\n  </Layout>\n)\n\nIndexPage.propTypes = {\n  pageContext: PropTypes.shape({\n    locale: PropTypes.string.isRequired\n  }).isRequired\n}\n\nexport default IndexPage\n\n// import React from \"react\";\n// import { graphql } from \"gatsby\";\n// import Layout from \"../components/Layout\";\n// import Img from \"gatsby-image\";\n\n// const IndexPage = ({ data }) => (\n//   <Layout>\n//     <h3>{data.site.siteMetadata.title}</h3>\n//     <Img fluid={data.testBlah.childImageSharp.fluid} />\n//   </Layout>\n// );\n\n// export default IndexPage;\n\n// export const pageQuery = graphql`\n//   query IndexQuery {\n//     site {\n//       siteMetadata {\n//         title\n//       }\n//     }\n//     testBlah: file(relativePath: { eq: \"wattys_splash_hero.png\" }) {\n//       childImageSharp {\n//         fluid(maxWidth: 1240) {\n//           ...GatsbyImageSharpFluid\n//         }\n//       }\n//     }\n//   }\n// `;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n    en: {\n      path: 'en',\n      locale: 'English',\n      default: true\n    },\n    pt: {\n      path: 'pt',\n      locale: 'PortuguÃªs'\n    }\n  }","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { injectIntl, intlShape } from 'react-intl'\n\nimport locales from '../../constants/locales'\n\nconst LocalizedLink = ({ to, intl: { locale }, ...props }) => {\n  const path = locales[locale].default ? to : `/${locale}${to}`\n\n  return <Link {...props} to={path} />\n}\n\nLocalizedLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  intl: intlShape.isRequired\n}\n\nexport default injectIntl(LocalizedLink)","import React from 'react'\nimport { Link } from 'gatsby'\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl'\n\nimport LocalizedLink from '../LocalizedLink'\n\nimport locales from '../../constants/locales'\n\nimport styles from './style.module.css'\n\nconst Header = ({ intl: { locale } }) => (\n  <div className={styles.header}>\n    <div className={styles.inner}>\n      <h1 style={{ margin: 0 }}>\n        <LocalizedLink to=\"/\">\n          <FormattedMessage id=\"siteTitle\" />\n        </LocalizedLink>\n      </h1>\n      <nav className={styles.language}>\n        {Object.keys(locales).map(key => (\n          <Link\n            className={key === locale ? styles.active : ''}\n            key={locales[key].locale}\n            to={locales[key].default ? '/' : `/${locales[key].path}`}\n          >\n            {locales[key].locale}\n          </Link>\n        ))}\n      </nav>\n    </div>\n  </div>\n)\n\nHeader.propTypes = { intl: intlShape.isRequired }\n\nexport default injectIntl(Header)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}